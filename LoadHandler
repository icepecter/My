[ 함수 받아서 순차대로 실행 시키는 역할 ] 

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class LoadHandler : MonoBehaviour
{
    [SerializeField, Range(0.01f, 0.1f)]
    private float _percentSpeed = 0.02f;
    private float _percent;
    
    public string PercentString
    { 
        get
        { 
            return string.Format("{0:F1}%", _percent * 100);
        }
    }

    public float PercentFloat
    { 
        get
        { 
            return _percent;
        }
    }

    public  bool IsDone  { get; private set; }

    public void Load(params Action[] doList)
    { 
        StartCoroutine(LoadCorutine(doList));
    }

    private IEnumerator LoadCorutine(Action[] doList)
    {
        _percent = 0.0f;
        IsDone  = false;


        for(int i = 0; i < doList.Length; i++)
        {
            float stepPercent = 1f / doList.Length * (i + 1);

            yield return LoadActionCotuine(doList[i], stepPercent);
        }

        _percent = 1.0f;
        IsDone  = true;
    }

    private IEnumerator LoadActionCotuine(Action doAction, float stepPercent)
    { 
        IAsyncResult result = doAction?.BeginInvoke(callback => {}, null);

        while(!result.IsCompleted)
        {
            _percent = Mathf.Clamp(_percent + Time.deltaTime / 2 * _percentSpeed, _percent, stepPercent);
            yield return null;
        }

        _percent = stepPercent;
    }

}
